{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "User API Documentation",
        "description": "User API Documentation"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "URL DEV"
        }
    ],
    "components": {
        "securitySchemes": {
            "accessToken": {
              "type": "apiKey",
              "in": "header",
              "name": "x-auth-token"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of the user",
                        "example": "Patria"
                    },
                    "username": {
                        "type": "string",
                        "description": "username of the user",
                        "example": "patriagani"
                    },
                    "password": {
                        "type": "string",
                        "description": "password of the user",
                        "example": "patria123"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["admin", "user"],
                        "description": "role of the user",
                        "example": "user"
                    }
                },
                "required": [
                    "name",
                    "username",
                    "password",
                    "role"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "User",
            "description": "User"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns a list of users",
                "description": "Get list all of users",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON array of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create new user",
                "description": "Create new user object",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A JSON array of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get object of user by id",
                "description": "Get object of user by id",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "String ID of the user to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update object of user by id",
                "description": "Update object of user by id",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "String ID of the user to get"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "A JSON of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete object of user by id",
                "description": "Delete object of user by id",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "String ID of the user to get"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "A JSON of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns a object of authenticated user",
                "description": "Get object of authenticated user",
                "security": [
                    {
                        "accessToken": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON of user object"
                    },
                    "400": {
                        "description": "Invalid token"
                    },
                    "401": {
                        "description": "No token provided / expired token"
                    },
                    "403": {
                        "description": "Forbidden (not admin)"
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "description": "Login using username and password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "username of the user",
                                        "example": "patriagani"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "password of the user",
                                        "example": "patria123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A JSON of object contain acccess token and refresh token"
                    },
                    "401": {
                        "description": "Wrong username or password" 
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            }
        },
        "/users/token/refresh": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get new user access token using refresh token",
                "description": "Refresh access token using user refresh token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "description": "expired user access token",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWQxNTMxMzc1Y2YzZDBkMjFlNjE2ZTciLCJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJ0b2tlblR5cGUiOiJhY2Nlc3NUb2tlbiIsImlhdCI6MTY0MTE4MjMxMywiZXhwIjoxNjQxMTgyNjEzfQ.ZpLtMYPImo49kw_NOFPhUHwsf2IxJUrALB2K4iH6NpI"
                                    },
                                    "refreshtoken": {
                                        "type": "string",
                                        "description": "valid user refresh token",
                                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWQxNTMxMzc1Y2YzZDBkMjFlNjE2ZTciLCJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInVzZXJuYW1lIjoiYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJ0b2tlblR5cGUiOiJyZWZyZXNoVG9rZW4iLCJpYXQiOjE2NDExODIzMTMsImV4cCI6MTY3MjczOTkxM30.rA3MRBZG3nCEO-h7_HVW79AMEY_cZMJK_1JfqLBz7bk"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A JSON of object contain acccess token and refresh token"
                    },
                    "400": {
                        "description": "Invalid access token" 
                    },
                    "500": {
                        "description": "Internal server error" 
                    }
                }
            }
        }
        
    }
}